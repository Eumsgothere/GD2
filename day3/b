using UnityEngine;

public class SphereTarget : MonoBehaviour
{
    [SerializeField] private Renderer sphereRenderer;
    [SerializeField] private Color redColor = Color.red;
    [SerializeField] private Color blueColor = Color.blue;

    private Color currentColor;
    private static int totalTargets;       // total spheres in scene
    private static int destroyedTargets;   // how many are gone

    private void Start()
    {
        if (sphereRenderer == null)
            sphereRenderer = GetComponent<Renderer>();

        // Count how many targets exist in the scene
        totalTargets = FindObjectsOfType<SphereTarget>().Length;

        // Randomly choose red or blue
        currentColor = (Random.value > 0.5f) ? blueColor : redColor;
        sphereRenderer.material.color = currentColor;
    }

    private void OnCollisionEnter(Collision collision)
    {
        // Only respond to red or blue balls
        if (!collision.gameObject.CompareTag("RedBall") && !collision.gameObject.CompareTag("BlueBall"))
            return;

        bool isRedTarget = currentColor == redColor;
        string ballTag = collision.gameObject.tag;

        // Destroy only if colors match
        if ((isRedTarget && ballTag == "RedBall") || (!isRedTarget && ballTag == "BlueBall"))
        {
            destroyedTargets++;
            Destroy(gameObject);
            CheckAllTargetsDestroyed();
        }
        else
        {
            Debug.Log("Wrong color hit!");
        }
    }

    private void CheckAllTargetsDestroyed()
    {
        if (destroyedTargets >= totalTargets)
        {
            Debug.Log("âœ… All targets destroyed! Opening the door...");
            RotatingDoor.OpenDoor(); // trigger door when all are gone
        }
    }
}